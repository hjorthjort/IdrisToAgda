name:            Toy2
version:         0.1
build-type:      Simple
cabal-version:   1.24
license:         MIT
license-file:    LICENSE
author:          Jakob Larsson
category:        Dependent types
synopsis:        A toy Idris to Agda translation
description:
  Test

extra-source-files: README.md
                    ./undefined.h
                    -- Lexer.x
                    -- Parser.y

executable ita
  hs-source-dirs:   ., Agda
  build-depends:  array >= 0.3 && < 0.6
                , base >= 4.6 && < 5
                , containers >= 0.3 && < 0.7
                , mtl >= 2.2.2 && < 2.3
                , pretty >= 1.0 && < 1.2
                , bytestring >= 0.10.6.0 && < 0.11
                , data-hash >= 0.2.0.0 && < 0.3
                , unordered-containers >= 0.2.5.0 && < 0.3
                , strict >= 0.3.2 && < 0.4
                , text >= 1.2.3.1 && < 1.3
                , directory >= 1.2.2.0 && < 1.4
                , hashable >= 1.2.1.0 && < 1.3
                , filepath >= 1.4.0.0 && < 1.5
                , deepseq >= 1.4.1.1 && < 1.5
                , binary >= 0.7.3.0 && < 0.9
                , ieee754 >= 0.7.8 && < 0.9
                , mtl >= 2.2.1 && < 2.3
                , transformers >= 0.5.5.0
                , EdisonCore == 1.3.1.1 || >= 1.3.2.1 && < 1.4
  build-tools:      happy >= 1.15 && < 2,
                    alex >= 3.0 && < 4
  default-language: Haskell98
  default-extensions: CPP
                    MultiParamTypeClasses
                    TypeSynonymInstances
                    FlexibleInstances
                    FlexibleContexts
                    GeneralizedNewtypeDeriving
                    NoMonomorphismRestriction
                    PatternGuards
                    TupleSections
                    NamedFieldPuns
                    ConstraintKinds
                    DataKinds
                    DefaultSignatures
                    DeriveFoldable
                    DeriveFunctor
                    DeriveTraversable
                    ExistentialQuantification
                    FlexibleContexts
                    FlexibleInstances
                    FunctionalDependencies
                    LambdaCase
                    MultiParamTypeClasses
                    MultiWayIf
                    NamedFieldPuns
                    OverloadedStrings
                    RankNTypes
                    RecordWildCards
                    ScopedTypeVariables
                    StandaloneDeriving
                    TypeSynonymInstances
                    TupleSections
  main-is:          Main.hs
  other-modules: Agda.Syntax.Abstract.Name
                 Agda.Syntax.Common
                 Agda.Syntax.Concrete
                 Agda.Syntax.Concrete.Name
                 Agda.Syntax.Concrete.Pretty
                 Agda.Syntax.Fixity
                 Agda.Syntax.Literal
                 Agda.Syntax.Notation
                 Agda.Syntax.Position
                 Agda.Utils.Bag
                 Agda.Utils.Either
                 Agda.Utils.Except
                 Agda.Utils.FileName
                 Agda.Utils.Function
                 Agda.Utils.Functor
                 Agda.Utils.Impossible
                 Agda.Utils.Lens
                 Agda.Utils.List
                 Agda.Utils.Maybe
                 Agda.Utils.Maybe.Strict
                 Agda.Utils.Monad
                 Agda.Utils.NonemptyList
                 Agda.Utils.Null
                 Agda.Utils.POMonoid
                 Agda.Utils.PartialOrd
                 Agda.Utils.Pretty
                 Agda.Utils.Size
                 Agda.Utils.Suffix
                 Agda.Utils.Tuple
                 Agda.Utils.Graph.AdjacencyMap.Unidirectional
                 Agda.Utils.SemiRing
                 Agda.Utils.Singleton
                 Agda.Utils.String
                 Agda.TypeChecking.Positivity.Occurrence
                 Agda.Interaction.Options.IORefs

                    -- Lexer
                    -- Parser
